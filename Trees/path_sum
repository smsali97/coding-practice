class Solution:
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> int:
        self.paths = 0

        def rec(node, curr_sum):
            if not node:
                return 

            curr_sum += node.val

            if curr_sum == targetSum:
                self.paths += 1

            # Continue exploring even if curr_sum == targetSum
            rec(node.left, curr_sum)
            rec(node.right, curr_sum)

        def traverse(node):
            if not node: 
                return

            rec(node, 0)  # Start a new path from each node
            traverse(node.left)
            traverse(node.right)

        traverse(root)
        return self.paths